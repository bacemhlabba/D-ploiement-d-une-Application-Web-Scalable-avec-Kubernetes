#!/bin/bash
# Script de gestion du port-forwarding pour k8s-scalable-app

echo "üåê Gestion du port-forwarding pour k8s-scalable-app..."

# Fonction pour d√©marrer le port-forwarding
start_port_forwarding() {
    echo "D√©marrage des services de port-forwarding..."
    
    # Arr√™ter les port-forwards existants
    pkill -f "kubectl port-forward service/frontend" 2>/dev/null
    pkill -f "kubectl port-forward service/backend" 2>/dev/null
    
    # Attendre un moment que les processus s'arr√™tent
    sleep 2
    
    # D√©marrer le port-forward frontend
    echo "D√©marrage du port-forward frontend (8080:80)..."
    nohup kubectl port-forward service/frontend 8080:80 -n scalable-app > frontend-port-forward.log 2>&1 &
    FRONTEND_PF_PID=$!
    
    # D√©marrer le port-forward backend
    echo "D√©marrage du port-forward backend (3000:3000)..."
    nohup kubectl port-forward service/backend 3000:3000 -n scalable-app > backend-port-forward.log 2>&1 &
    BACKEND_PF_PID=$!
    
    # Sauvegarder les PIDs pour r√©f√©rence ult√©rieure
    echo $FRONTEND_PF_PID > .frontend-pf.pid
    echo $BACKEND_PF_PID > .backend-pf.pid
    
    echo "‚úÖ Port-forwarding d√©marr√© avec succ√®s !"
    echo "   PID Frontend : $FRONTEND_PF_PID (logs : frontend-port-forward.log)"
    echo "   PID Backend : $BACKEND_PF_PID (logs : backend-port-forward.log)"
    echo ""
    echo "üåê Acc√©dez √† votre application :"
    echo "   Frontend : http://localhost:8080"
    echo "   Backend : http://localhost:3000/api"
}

# Fonction pour arr√™ter le port-forwarding
stop_port_forwarding() {
    echo "Arr√™t des services de port-forwarding..."
    pkill -f "kubectl port-forward service/frontend"
    pkill -f "kubectl port-forward service/backend"
    
    # Nettoyer les fichiers PID
    rm -f .frontend-pf.pid .backend-pf.pid
    
    echo "‚úÖ Port-forwarding arr√™t√© !"
}

# Fonction pour v√©rifier le statut
check_status() {
    echo "üåê Statut du Port-forwarding :"
    
    if pgrep -f "kubectl port-forward service/frontend" >/dev/null; then
        echo "   ‚úÖ Port-forward frontend (8080) en cours d'ex√©cution"
    else
        echo "   ‚ùå Port-forward frontend ne fonctionne pas"
    fi
    
    if pgrep -f "kubectl port-forward service/backend" >/dev/null; then
        echo "   ‚úÖ Port-forward backend (3000) en cours d'ex√©cution"
    else
        echo "   ‚ùå Port-forward backend ne fonctionne pas"
    fi
    
    # Afficher la fin des logs si disponible
    if [ -f frontend-port-forward.log ]; then
        echo ""
        echo "üìã Logs frontend (3 derni√®res lignes) :"
        tail -n 3 frontend-port-forward.log
    fi
    
    if [ -f backend-port-forward.log ]; then
        echo ""
        echo "üìã Logs backend (3 derni√®res lignes) :"
        tail -n 3 backend-port-forward.log
    fi
}

# Logique principale du script
case "${1:-start}" in
    start)
        start_port_forwarding
        ;;
    stop)
        stop_port_forwarding
        ;;
    restart)
        stop_port_forwarding
        sleep 2
        start_port_forwarding
        ;;
    status)
        check_status
        ;;
    *)
        echo "Usage : $0 {start|stop|restart|status}"
        echo ""
        echo "Commandes :"
        echo "  start   - D√©marrer le port-forwarding (par d√©faut)"
        echo "  stop    - Arr√™ter le port-forwarding"
        echo "  restart - Red√©marrer le port-forwarding"
        echo "  status  - V√©rifier le statut du port-forwarding"
        exit 1
        ;;
esac
